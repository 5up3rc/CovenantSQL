// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sqlchaintypes.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TxType int32

const (
	TxType_QUERY   TxType = 0
	TxType_STORAGE TxType = 1
)

var TxType_name = map[int32]string{
	0: "QUERY",
	1: "STORAGE",
}
var TxType_value = map[string]int32{
	"QUERY":   0,
	"STORAGE": 1,
}

func (x TxType) String() string {
	return proto.EnumName(TxType_name, int32(x))
}
func (TxType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{0}
}

type Signature struct {
	R                    string   `protobuf:"bytes,1,opt,name=R,proto3" json:"R,omitempty"`
	S                    string   `protobuf:"bytes,2,opt,name=S,proto3" json:"S,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{0}
}
func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (dst *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(dst, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetR() string {
	if m != nil {
		return m.R
	}
	return ""
}

func (m *Signature) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

type PublicKey struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{1}
}
func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (dst *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(dst, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type Hash struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hash) Reset()         { *m = Hash{} }
func (m *Hash) String() string { return proto.CompactTextString(m) }
func (*Hash) ProtoMessage()    {}
func (*Hash) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{2}
}
func (m *Hash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hash.Unmarshal(m, b)
}
func (m *Hash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hash.Marshal(b, m, deterministic)
}
func (dst *Hash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hash.Merge(dst, src)
}
func (m *Hash) XXX_Size() int {
	return xxx_messageInfo_Hash.Size(m)
}
func (m *Hash) XXX_DiscardUnknown() {
	xxx_messageInfo_Hash.DiscardUnknown(m)
}

var xxx_messageInfo_Hash proto.InternalMessageInfo

func (m *Hash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type UtxoEntry struct {
	IsCoinbase           bool             `protobuf:"varint,1,opt,name=IsCoinbase,proto3" json:"IsCoinbase,omitempty"`
	FromMainChain        bool             `protobuf:"varint,2,opt,name=FromMainChain,proto3" json:"FromMainChain,omitempty"`
	BlockHeight          uint32           `protobuf:"varint,3,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	SparseOutputs        map[uint32]*Utxo `protobuf:"bytes,4,rep,name=SparseOutputs,proto3" json:"SparseOutputs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UtxoEntry) Reset()         { *m = UtxoEntry{} }
func (m *UtxoEntry) String() string { return proto.CompactTextString(m) }
func (*UtxoEntry) ProtoMessage()    {}
func (*UtxoEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{3}
}
func (m *UtxoEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UtxoEntry.Unmarshal(m, b)
}
func (m *UtxoEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UtxoEntry.Marshal(b, m, deterministic)
}
func (dst *UtxoEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UtxoEntry.Merge(dst, src)
}
func (m *UtxoEntry) XXX_Size() int {
	return xxx_messageInfo_UtxoEntry.Size(m)
}
func (m *UtxoEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_UtxoEntry.DiscardUnknown(m)
}

var xxx_messageInfo_UtxoEntry proto.InternalMessageInfo

func (m *UtxoEntry) GetIsCoinbase() bool {
	if m != nil {
		return m.IsCoinbase
	}
	return false
}

func (m *UtxoEntry) GetFromMainChain() bool {
	if m != nil {
		return m.FromMainChain
	}
	return false
}

func (m *UtxoEntry) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *UtxoEntry) GetSparseOutputs() map[uint32]*Utxo {
	if m != nil {
		return m.SparseOutputs
	}
	return nil
}

type Utxo struct {
	UtxoHeader           *UtxoHeader `protobuf:"bytes,1,opt,name=UtxoHeader,proto3" json:"UtxoHeader,omitempty"`
	Spent                bool        `protobuf:"varint,2,opt,name=Spent,proto3" json:"Spent,omitempty"`
	Amount               uint64      `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Utxo) Reset()         { *m = Utxo{} }
func (m *Utxo) String() string { return proto.CompactTextString(m) }
func (*Utxo) ProtoMessage()    {}
func (*Utxo) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{4}
}
func (m *Utxo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Utxo.Unmarshal(m, b)
}
func (m *Utxo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Utxo.Marshal(b, m, deterministic)
}
func (dst *Utxo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Utxo.Merge(dst, src)
}
func (m *Utxo) XXX_Size() int {
	return xxx_messageInfo_Utxo.Size(m)
}
func (m *Utxo) XXX_DiscardUnknown() {
	xxx_messageInfo_Utxo.DiscardUnknown(m)
}

var xxx_messageInfo_Utxo proto.InternalMessageInfo

func (m *Utxo) GetUtxoHeader() *UtxoHeader {
	if m != nil {
		return m.UtxoHeader
	}
	return nil
}

func (m *Utxo) GetSpent() bool {
	if m != nil {
		return m.Spent
	}
	return false
}

func (m *Utxo) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type UtxoHeader struct {
	Version              int32      `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	PrevTxHash           *Hash      `protobuf:"bytes,2,opt,name=PrevTxHash,proto3" json:"PrevTxHash,omitempty"`
	Signee               *PublicKey `protobuf:"bytes,3,opt,name=Signee,proto3" json:"Signee,omitempty"`
	Signature            *Signature `protobuf:"bytes,4,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UtxoHeader) Reset()         { *m = UtxoHeader{} }
func (m *UtxoHeader) String() string { return proto.CompactTextString(m) }
func (*UtxoHeader) ProtoMessage()    {}
func (*UtxoHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{5}
}
func (m *UtxoHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UtxoHeader.Unmarshal(m, b)
}
func (m *UtxoHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UtxoHeader.Marshal(b, m, deterministic)
}
func (dst *UtxoHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UtxoHeader.Merge(dst, src)
}
func (m *UtxoHeader) XXX_Size() int {
	return xxx_messageInfo_UtxoHeader.Size(m)
}
func (m *UtxoHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_UtxoHeader.DiscardUnknown(m)
}

var xxx_messageInfo_UtxoHeader proto.InternalMessageInfo

func (m *UtxoHeader) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UtxoHeader) GetPrevTxHash() *Hash {
	if m != nil {
		return m.PrevTxHash
	}
	return nil
}

func (m *UtxoHeader) GetSignee() *PublicKey {
	if m != nil {
		return m.Signee
	}
	return nil
}

func (m *UtxoHeader) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Tx struct {
	UtxoIn               []*Utxo  `protobuf:"bytes,1,rep,name=UtxoIn,proto3" json:"UtxoIn,omitempty"`
	UtxoOut              []*Utxo  `protobuf:"bytes,2,rep,name=UtxoOut,proto3" json:"UtxoOut,omitempty"`
	Type                 TxType   `protobuf:"varint,3,opt,name=type,proto3,enum=types.TxType" json:"type,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tx) Reset()         { *m = Tx{} }
func (m *Tx) String() string { return proto.CompactTextString(m) }
func (*Tx) ProtoMessage()    {}
func (*Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{6}
}
func (m *Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tx.Unmarshal(m, b)
}
func (m *Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tx.Marshal(b, m, deterministic)
}
func (dst *Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tx.Merge(dst, src)
}
func (m *Tx) XXX_Size() int {
	return xxx_messageInfo_Tx.Size(m)
}
func (m *Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Tx proto.InternalMessageInfo

func (m *Tx) GetUtxoIn() []*Utxo {
	if m != nil {
		return m.UtxoIn
	}
	return nil
}

func (m *Tx) GetUtxoOut() []*Utxo {
	if m != nil {
		return m.UtxoOut
	}
	return nil
}

func (m *Tx) GetType() TxType {
	if m != nil {
		return m.Type
	}
	return TxType_QUERY
}

func (m *Tx) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type NodeID struct {
	NodeID               string   `protobuf:"bytes,1,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeID) Reset()         { *m = NodeID{} }
func (m *NodeID) String() string { return proto.CompactTextString(m) }
func (*NodeID) ProtoMessage()    {}
func (*NodeID) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{7}
}
func (m *NodeID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeID.Unmarshal(m, b)
}
func (m *NodeID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeID.Marshal(b, m, deterministic)
}
func (dst *NodeID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeID.Merge(dst, src)
}
func (m *NodeID) XXX_Size() int {
	return xxx_messageInfo_NodeID.Size(m)
}
func (m *NodeID) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeID.DiscardUnknown(m)
}

var xxx_messageInfo_NodeID proto.InternalMessageInfo

func (m *NodeID) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

type Header struct {
	Version              int32    `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Producer             *NodeID  `protobuf:"bytes,2,opt,name=Producer,proto3" json:"Producer,omitempty"`
	Root                 *Hash    `protobuf:"bytes,3,opt,name=Root,proto3" json:"Root,omitempty"`
	Parent               *Hash    `protobuf:"bytes,4,opt,name=Parent,proto3" json:"Parent,omitempty"`
	MerkleRoot           *Hash    `protobuf:"bytes,5,opt,name=MerkleRoot,proto3" json:"MerkleRoot,omitempty"`
	Timestamp            []byte   `protobuf:"bytes,6,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{8}
}
func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (dst *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(dst, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Header) GetProducer() *NodeID {
	if m != nil {
		return m.Producer
	}
	return nil
}

func (m *Header) GetRoot() *Hash {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *Header) GetParent() *Hash {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *Header) GetMerkleRoot() *Hash {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *Header) GetTimestamp() []byte {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type SignedHeader struct {
	Header               *Header    `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	BlockHash            *Hash      `protobuf:"bytes,2,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	Signee               *PublicKey `protobuf:"bytes,3,opt,name=Signee,proto3" json:"Signee,omitempty"`
	Signature            *Signature `protobuf:"bytes,4,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SignedHeader) Reset()         { *m = SignedHeader{} }
func (m *SignedHeader) String() string { return proto.CompactTextString(m) }
func (*SignedHeader) ProtoMessage()    {}
func (*SignedHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{9}
}
func (m *SignedHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedHeader.Unmarshal(m, b)
}
func (m *SignedHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedHeader.Marshal(b, m, deterministic)
}
func (dst *SignedHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedHeader.Merge(dst, src)
}
func (m *SignedHeader) XXX_Size() int {
	return xxx_messageInfo_SignedHeader.Size(m)
}
func (m *SignedHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedHeader.DiscardUnknown(m)
}

var xxx_messageInfo_SignedHeader proto.InternalMessageInfo

func (m *SignedHeader) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SignedHeader) GetBlockHash() *Hash {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *SignedHeader) GetSignee() *PublicKey {
	if m != nil {
		return m.Signee
	}
	return nil
}

func (m *SignedHeader) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type State struct {
	Head                 *Hash    `protobuf:"bytes,1,opt,name=Head,proto3" json:"Head,omitempty"`
	Height               int32    `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{10}
}
func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (dst *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(dst, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetHead() *Hash {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *State) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type BPTx struct {
	TxHash               *Hash     `protobuf:"bytes,1,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	Txdata               *BPTxData `protobuf:"bytes,2,opt,name=txdata,proto3" json:"txdata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BPTx) Reset()         { *m = BPTx{} }
func (m *BPTx) String() string { return proto.CompactTextString(m) }
func (*BPTx) ProtoMessage()    {}
func (*BPTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{11}
}
func (m *BPTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BPTx.Unmarshal(m, b)
}
func (m *BPTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BPTx.Marshal(b, m, deterministic)
}
func (dst *BPTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BPTx.Merge(dst, src)
}
func (m *BPTx) XXX_Size() int {
	return xxx_messageInfo_BPTx.Size(m)
}
func (m *BPTx) XXX_DiscardUnknown() {
	xxx_messageInfo_BPTx.DiscardUnknown(m)
}

var xxx_messageInfo_BPTx proto.InternalMessageInfo

func (m *BPTx) GetTxHash() *Hash {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *BPTx) GetTxdata() *BPTxData {
	if m != nil {
		return m.Txdata
	}
	return nil
}

type BPTxData struct {
	AccountNonce         uint64     `protobuf:"varint,1,opt,name=AccountNonce,proto3" json:"AccountNonce,omitempty"`
	Recipient            *NodeID    `protobuf:"bytes,2,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	Amount               []byte     `protobuf:"bytes,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Payload              []byte     `protobuf:"bytes,4,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Sig                  *Signature `protobuf:"bytes,5,opt,name=Sig,proto3" json:"Sig,omitempty"`
	PublicKey            *PublicKey `protobuf:"bytes,6,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BPTxData) Reset()         { *m = BPTxData{} }
func (m *BPTxData) String() string { return proto.CompactTextString(m) }
func (*BPTxData) ProtoMessage()    {}
func (*BPTxData) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{12}
}
func (m *BPTxData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BPTxData.Unmarshal(m, b)
}
func (m *BPTxData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BPTxData.Marshal(b, m, deterministic)
}
func (dst *BPTxData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BPTxData.Merge(dst, src)
}
func (m *BPTxData) XXX_Size() int {
	return xxx_messageInfo_BPTxData.Size(m)
}
func (m *BPTxData) XXX_DiscardUnknown() {
	xxx_messageInfo_BPTxData.DiscardUnknown(m)
}

var xxx_messageInfo_BPTxData proto.InternalMessageInfo

func (m *BPTxData) GetAccountNonce() uint64 {
	if m != nil {
		return m.AccountNonce
	}
	return 0
}

func (m *BPTxData) GetRecipient() *NodeID {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *BPTxData) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *BPTxData) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *BPTxData) GetSig() *Signature {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *BPTxData) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type BPHeader struct {
	Version              int32    `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Producer             *NodeID  `protobuf:"bytes,2,opt,name=Producer,proto3" json:"Producer,omitempty"`
	Root                 *Hash    `protobuf:"bytes,3,opt,name=Root,proto3" json:"Root,omitempty"`
	Parent               *Hash    `protobuf:"bytes,4,opt,name=Parent,proto3" json:"Parent,omitempty"`
	MerkleRoot           *Hash    `protobuf:"bytes,5,opt,name=MerkleRoot,proto3" json:"MerkleRoot,omitempty"`
	Timestamp            []byte   `protobuf:"bytes,6,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BPHeader) Reset()         { *m = BPHeader{} }
func (m *BPHeader) String() string { return proto.CompactTextString(m) }
func (*BPHeader) ProtoMessage()    {}
func (*BPHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{13}
}
func (m *BPHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BPHeader.Unmarshal(m, b)
}
func (m *BPHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BPHeader.Marshal(b, m, deterministic)
}
func (dst *BPHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BPHeader.Merge(dst, src)
}
func (m *BPHeader) XXX_Size() int {
	return xxx_messageInfo_BPHeader.Size(m)
}
func (m *BPHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BPHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BPHeader proto.InternalMessageInfo

func (m *BPHeader) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BPHeader) GetProducer() *NodeID {
	if m != nil {
		return m.Producer
	}
	return nil
}

func (m *BPHeader) GetRoot() *Hash {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *BPHeader) GetParent() *Hash {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *BPHeader) GetMerkleRoot() *Hash {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *BPHeader) GetTimestamp() []byte {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type BPSignedHeader struct {
	Header               *Header    `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	BlockHash            *Hash      `protobuf:"bytes,2,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	Signee               *PublicKey `protobuf:"bytes,3,opt,name=Signee,proto3" json:"Signee,omitempty"`
	Signature            *Signature `protobuf:"bytes,4,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BPSignedHeader) Reset()         { *m = BPSignedHeader{} }
func (m *BPSignedHeader) String() string { return proto.CompactTextString(m) }
func (*BPSignedHeader) ProtoMessage()    {}
func (*BPSignedHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{14}
}
func (m *BPSignedHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BPSignedHeader.Unmarshal(m, b)
}
func (m *BPSignedHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BPSignedHeader.Marshal(b, m, deterministic)
}
func (dst *BPSignedHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BPSignedHeader.Merge(dst, src)
}
func (m *BPSignedHeader) XXX_Size() int {
	return xxx_messageInfo_BPSignedHeader.Size(m)
}
func (m *BPSignedHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BPSignedHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BPSignedHeader proto.InternalMessageInfo

func (m *BPSignedHeader) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BPSignedHeader) GetBlockHash() *Hash {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *BPSignedHeader) GetSignee() *PublicKey {
	if m != nil {
		return m.Signee
	}
	return nil
}

func (m *BPSignedHeader) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type BPBlock struct {
	Header               *BPSignedHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Tx                   []*BPTx         `protobuf:"bytes,2,rep,name=Tx,proto3" json:"Tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BPBlock) Reset()         { *m = BPBlock{} }
func (m *BPBlock) String() string { return proto.CompactTextString(m) }
func (*BPBlock) ProtoMessage()    {}
func (*BPBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_sqlchaintypes_801f6f452ed7f720, []int{15}
}
func (m *BPBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BPBlock.Unmarshal(m, b)
}
func (m *BPBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BPBlock.Marshal(b, m, deterministic)
}
func (dst *BPBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BPBlock.Merge(dst, src)
}
func (m *BPBlock) XXX_Size() int {
	return xxx_messageInfo_BPBlock.Size(m)
}
func (m *BPBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_BPBlock.DiscardUnknown(m)
}

var xxx_messageInfo_BPBlock proto.InternalMessageInfo

func (m *BPBlock) GetHeader() *BPSignedHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BPBlock) GetTx() []*BPTx {
	if m != nil {
		return m.Tx
	}
	return nil
}

func init() {
	proto.RegisterType((*Signature)(nil), "types.Signature")
	proto.RegisterType((*PublicKey)(nil), "types.PublicKey")
	proto.RegisterType((*Hash)(nil), "types.Hash")
	proto.RegisterType((*UtxoEntry)(nil), "types.UtxoEntry")
	proto.RegisterMapType((map[uint32]*Utxo)(nil), "types.UtxoEntry.SparseOutputsEntry")
	proto.RegisterType((*Utxo)(nil), "types.Utxo")
	proto.RegisterType((*UtxoHeader)(nil), "types.UtxoHeader")
	proto.RegisterType((*Tx)(nil), "types.Tx")
	proto.RegisterType((*NodeID)(nil), "types.NodeID")
	proto.RegisterType((*Header)(nil), "types.Header")
	proto.RegisterType((*SignedHeader)(nil), "types.SignedHeader")
	proto.RegisterType((*State)(nil), "types.State")
	proto.RegisterType((*BPTx)(nil), "types.BPTx")
	proto.RegisterType((*BPTxData)(nil), "types.BPTxData")
	proto.RegisterType((*BPHeader)(nil), "types.BPHeader")
	proto.RegisterType((*BPSignedHeader)(nil), "types.BPSignedHeader")
	proto.RegisterType((*BPBlock)(nil), "types.BPBlock")
	proto.RegisterEnum("types.TxType", TxType_name, TxType_value)
}

func init() { proto.RegisterFile("sqlchaintypes.proto", fileDescriptor_sqlchaintypes_801f6f452ed7f720) }

var fileDescriptor_sqlchaintypes_801f6f452ed7f720 = []byte{
	// 799 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0x5f, 0x6f, 0xe2, 0x46,
	0x10, 0xaf, 0xc1, 0x18, 0x18, 0x20, 0xa5, 0xdb, 0x3f, 0x42, 0x69, 0xd5, 0x12, 0xa7, 0x51, 0x48,
	0xa3, 0x22, 0x95, 0xbe, 0x54, 0x7d, 0x6a, 0x48, 0xd2, 0x06, 0x55, 0x49, 0xdc, 0xb5, 0x53, 0xa9,
	0x8f, 0x1b, 0xb3, 0x22, 0x56, 0xc0, 0x76, 0xed, 0x75, 0x04, 0x1f, 0x22, 0x1f, 0xe5, 0xbe, 0xc0,
	0xe9, 0x3e, 0xcb, 0xe9, 0xee, 0x9b, 0x9c, 0x66, 0xbd, 0x36, 0x36, 0x24, 0xba, 0xa7, 0x7b, 0xb8,
	0x7b, 0x62, 0x67, 0x7e, 0xe3, 0xdd, 0x99, 0xdf, 0xfc, 0x66, 0x04, 0x7c, 0x19, 0xff, 0x3f, 0x77,
	0xef, 0x98, 0xe7, 0x8b, 0x55, 0xc8, 0xe3, 0x61, 0x18, 0x05, 0x22, 0x20, 0x35, 0x69, 0x98, 0x87,
	0xd0, 0xb4, 0xbd, 0x99, 0xcf, 0x44, 0x12, 0x71, 0xd2, 0x06, 0x8d, 0xf6, 0xb4, 0xbe, 0x36, 0x68,
	0x52, 0x8d, 0xa2, 0x65, 0xf7, 0x2a, 0xa9, 0x65, 0x9b, 0x47, 0xd0, 0xb4, 0x92, 0xdb, 0xb9, 0xe7,
	0xfe, 0xcd, 0x57, 0xe4, 0xbb, 0x82, 0x21, 0x3f, 0x68, 0xd3, 0xb5, 0xc3, 0xdc, 0x05, 0xfd, 0x82,
	0xc5, 0x77, 0x84, 0xa4, 0xbf, 0x2a, 0x40, 0x9e, 0xcd, 0xc7, 0x0a, 0x34, 0x6f, 0xc4, 0x32, 0x38,
	0xf7, 0x45, 0xb4, 0x22, 0xdf, 0x03, 0x4c, 0xe2, 0xd3, 0xc0, 0xf3, 0x6f, 0x59, 0xcc, 0x65, 0x5c,
	0x83, 0x16, 0x3c, 0xe4, 0x47, 0xe8, 0xfc, 0x19, 0x05, 0x8b, 0x4b, 0xe6, 0xf9, 0xa7, 0x58, 0x80,
	0x4c, 0xa7, 0x41, 0xcb, 0x4e, 0xd2, 0x87, 0xd6, 0x78, 0x1e, 0xb8, 0xf7, 0x17, 0xdc, 0x9b, 0xdd,
	0x89, 0x5e, 0xb5, 0xaf, 0x0d, 0x3a, 0xb4, 0xe8, 0x22, 0x13, 0xe8, 0xd8, 0x21, 0x8b, 0x62, 0x7e,
	0x9d, 0x88, 0x30, 0x11, 0x71, 0x4f, 0xef, 0x57, 0x07, 0xad, 0xd1, 0xfe, 0x30, 0x65, 0x24, 0x4f,
	0x68, 0x58, 0x8a, 0x92, 0x2e, 0x5a, 0xfe, 0x72, 0xf7, 0x12, 0xc8, 0x76, 0x10, 0xe9, 0x42, 0xf5,
	0x5e, 0x51, 0xd1, 0xa1, 0x78, 0x24, 0x7b, 0x50, 0x7b, 0x60, 0xf3, 0x84, 0xcb, 0x94, 0x5b, 0xa3,
	0x56, 0xe1, 0x29, 0x9a, 0x22, 0xbf, 0x57, 0x7e, 0xd3, 0xcc, 0x19, 0xe8, 0xe8, 0x22, 0xbf, 0x00,
	0xe0, 0xef, 0x05, 0x67, 0x53, 0x1e, 0xc9, 0x7b, 0x5a, 0xa3, 0x2f, 0x0a, 0xdf, 0xa4, 0x00, 0x2d,
	0x04, 0x91, 0xaf, 0xa0, 0x66, 0x87, 0xdc, 0x17, 0x8a, 0x94, 0xd4, 0x20, 0xdf, 0x80, 0xc1, 0x16,
	0x41, 0xe2, 0xa7, 0x3c, 0xe8, 0x54, 0x59, 0xe6, 0x0b, 0xad, 0xf8, 0x02, 0xe9, 0x41, 0xfd, 0x5f,
	0x1e, 0xc5, 0x5e, 0xe0, 0xcb, 0xc7, 0x6a, 0x34, 0x33, 0xc9, 0x31, 0x80, 0x15, 0xf1, 0x07, 0x67,
	0x29, 0x7b, 0x57, 0xce, 0x1e, 0x5d, 0xb4, 0x00, 0x93, 0x01, 0x18, 0x28, 0x1f, 0xce, 0xe5, 0x6b,
	0xad, 0x51, 0x57, 0x05, 0xe6, 0x62, 0xa0, 0x0a, 0x27, 0xc3, 0x82, 0xd0, 0x7a, 0x7a, 0x29, 0x38,
	0xf7, 0xd3, 0x75, 0x88, 0xf9, 0xa8, 0x41, 0xc5, 0x59, 0x92, 0x7d, 0x30, 0x30, 0xeb, 0x09, 0xa6,
	0x59, 0xdd, 0xe4, 0x51, 0x41, 0xe4, 0x00, 0xea, 0x78, 0xba, 0x4e, 0x90, 0x8b, 0xad, 0xa8, 0x0c,
	0x23, 0x7b, 0xa0, 0xa3, 0x5b, 0xa6, 0xba, 0x33, 0xea, 0xa8, 0x18, 0x67, 0xe9, 0xac, 0x42, 0x4e,
	0x25, 0x84, 0xb4, 0x9c, 0x06, 0xbe, 0x40, 0x56, 0x75, 0xa9, 0xfc, 0xcc, 0x34, 0xfb, 0x60, 0x5c,
	0x05, 0x53, 0x3e, 0x39, 0x43, 0x86, 0xd3, 0x93, 0x1a, 0x15, 0x65, 0x99, 0xaf, 0x35, 0x30, 0xde,
	0xcb, 0xee, 0x11, 0x34, 0xac, 0x28, 0x98, 0x26, 0x2e, 0x8f, 0x14, 0xb7, 0x59, 0x1e, 0xe9, 0x2d,
	0x34, 0x87, 0xc9, 0x0f, 0xa0, 0xd3, 0x20, 0x10, 0x8a, 0xd9, 0x52, 0x0b, 0x24, 0x80, 0xdc, 0x58,
	0x2c, 0xca, 0x72, 0xdd, 0x08, 0x51, 0x10, 0xb6, 0xf3, 0x92, 0x47, 0xf7, 0x73, 0x2e, 0xef, 0xaa,
	0x3d, 0xd1, 0xce, 0x35, 0x8c, 0x73, 0xed, 0x78, 0x0b, 0x1e, 0x0b, 0xb6, 0x08, 0x7b, 0x46, 0x3a,
	0xd7, 0xb9, 0xc3, 0x7c, 0xa9, 0x41, 0x5b, 0x76, 0x73, 0xaa, 0xca, 0x3c, 0xc8, 0x0a, 0x56, 0x82,
	0xcd, 0x4a, 0x51, 0x62, 0xcd, 0xd8, 0x38, 0x82, 0x66, 0x3a, 0x8c, 0xcf, 0x08, 0x6a, 0x8d, 0x7e,
	0x40, 0x3d, 0xfd, 0x01, 0x35, 0x5b, 0x30, 0xc1, 0x91, 0x56, 0xcc, 0x4b, 0xa5, 0x5c, 0xa6, 0x15,
	0x01, 0xec, 0xaf, 0xda, 0x24, 0x15, 0xd9, 0x3b, 0x65, 0x99, 0x0e, 0xe8, 0x63, 0x2b, 0x95, 0xa4,
	0x1a, 0x8e, 0x27, 0xae, 0x50, 0x10, 0x39, 0x04, 0x43, 0x2c, 0xa7, 0x4c, 0x30, 0x55, 0xf0, 0xe7,
	0x2a, 0x08, 0x6f, 0x38, 0x63, 0x82, 0x51, 0x05, 0x9b, 0x6f, 0x35, 0x68, 0x64, 0x4e, 0x62, 0x42,
	0xfb, 0xc4, 0x75, 0x71, 0x5e, 0xaf, 0x02, 0xdf, 0x4d, 0x37, 0xa2, 0x4e, 0x4b, 0x3e, 0x72, 0x0c,
	0x4d, 0xca, 0x5d, 0x2f, 0xf4, 0xb2, 0xd1, 0xdf, 0x92, 0xd0, 0x1a, 0xc7, 0x5a, 0x4e, 0xd6, 0xdb,
	0xa0, 0x4d, 0x95, 0x85, 0x02, 0xb5, 0xd8, 0x6a, 0x1e, 0xb0, 0xa9, 0xe4, 0xae, 0x4d, 0x33, 0x93,
	0x98, 0x50, 0xb5, 0xbd, 0x99, 0x12, 0xca, 0x36, 0xa3, 0x08, 0x22, 0xf7, 0x61, 0xbe, 0xfe, 0x8d,
	0x67, 0x1a, 0xb5, 0x0e, 0x31, 0xdf, 0xc8, 0x1a, 0x3f, 0xe9, 0xd9, 0x78, 0xa5, 0xc1, 0xce, 0xd8,
	0xfa, 0x68, 0xa7, 0xe3, 0x06, 0xea, 0x63, 0x4b, 0x3e, 0x44, 0x7e, 0xde, 0x48, 0xfb, 0xeb, 0x5c,
	0xb9, 0xc5, 0xea, 0xf2, 0xf4, 0xbf, 0xc5, 0x35, 0xbd, 0xb1, 0x76, 0x51, 0xcf, 0xb4, 0xe2, 0x2c,
	0x7f, 0xea, 0xe3, 0xa8, 0xe0, 0x7a, 0x25, 0x4d, 0xa8, 0xfd, 0x73, 0x73, 0x4e, 0xff, 0xeb, 0x7e,
	0x46, 0x5a, 0x50, 0xb7, 0x9d, 0x6b, 0x7a, 0xf2, 0xd7, 0x79, 0x57, 0xbb, 0x35, 0xe4, 0xbf, 0x91,
	0x5f, 0xdf, 0x05, 0x00, 0x00, 0xff, 0xff, 0x77, 0xed, 0x9f, 0x8b, 0xa4, 0x08, 0x00, 0x00,
}
